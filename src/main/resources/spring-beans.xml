<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        classpath:/org/springframework/beans/factory/xml/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
      	classpath:/org/springframework/context/config/spring-context-4.0.xsd
      	http://www.springframework.org/schema/jdbc 
      	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
      	http://www.springframework.org/schema/task
        classpath:/org/springframework/scheduling/config/spring-task-4.0.xsd
        http://www.springframework.org/schema/tx
        classpath:/org/springframework/transaction/config/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop
       	classpath:/org/springframework/aop/config/spring-aop-4.0.xsd
      	">
	<context:component-scan base-package="com.dsw.filetrans" />
	<!--Spring 的配置文件中一定要配置这一项 -->
	<task:annotation-driven />
	<context:property-placeholder location="classpath:application.properties" />
	<!-- <jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS"> 
		<jdbc:script location="classpath:db-schema-mysql.sql" /> </jdbc:initialize-database> -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.dsw.filetrans.model</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
			</props>
		</property>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="query*" read-only="true" />
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*" />
			<!--不需要事务管理的 -->
			<tx:method name="get*" read-only="false" propagation="NOT_SUPPORTED" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<!-- 配置一个切入点，匹配empManager和mgrManager 两个Bean的所有方法的执行 -->
		<aop:pointcut id="pointcut" expression="execution(* com.dsw.filetrans.dao.imp.*.*(..))" />
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>


	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 容器启动后执行：需要执行初始化方法，所以必须直接实例化，取消懒加载 -->
	<bean id="initDataService" class="com.dsw.filetrans.service.init.imp.InitDataServiceImp"
		init-method="constantsInit" lazy-init="false" />

</beans> 